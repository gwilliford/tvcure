{smcl}
{com}{sf}{ul off}{txt}{.-}
       log:  {res}C:\Users\Go! Staring!\Documents\Download\Duration distribution data\Stata_Version\Stata-Log one per war.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 1 Mar 2009, 23:41:19

{com}. do "C:\Users\GO!STA~1\AppData\Local\Temp\STD00000000.tmp"
{txt}
{com}. * The Duration of Interstate Wars, 1816-1985 - (Bennett and Stam 1996) - (APSR 90-2)
. * Stata commands for one case per war model: Table 1 - Model 5 (non-TVC)
. * This version generates predictions and computes error.
. 
. 
. ****************************************************************
. ** Commands to read data and estimate one case per war model  **
. ****************************************************************
. 
. clear
{txt}
{com}. 
. insheet using one_per_war.csv
{txt}(31 vars, 77 obs)

{com}. 
. * Note that a couple of variables were rescaled from this original data to give the coefficients in Table 1.
. replace summper = summper/1000
{txt}(77 real changes made)

{com}. replace sumpopb = sumpopb/1000000
{txt}(77 real changes made)

{com}. replace reprsum=-1*reprsum
{txt}(77 real changes made)

{com}. 
. stset length, id(warnum) fail(censor)

                {txt}id:  {res}warnum
     {txt}failure event:  {res}censor != 0 & censor < .
{txt}obs. time interval:  {res}(length[_n-1], length]
{txt} exit on or before:  {res}failure

{txt}{hline 78}
{res}       77{txt}  total obs.
{res}        0{txt}  exclusions
{hline 78}
{res}       77{txt}  obs. remaining, representing
{res}       77{txt}  subjects
{res}       77{txt}  failures in single failure-per-subject data
{res} 1198.476{txt}  total analysis time at risk, at risk from t = {res}        0
                             {txt}earliest observed entry t = {res}        0
                                  {txt}last observed exit t = {res}      121
{txt}
{com}. 
. * Model 5
. streg oadm oada oadp opda rterrain rterrstr bofadjbg summperb sumpopbg popratbg qualratb surpdiff salscale reprsumb demosumb adis3010 nactors, dist(weibull) nohr time

         {txt}failure _d:  {res}censor
   {txt}analysis time _t:  {res}length
                 {txt}id:  {res}warnum

{txt}Fitting constant-only model:

Iteration 0:   log likelihood = {res}-175.20796
{txt}Iteration 1:   log likelihood = {res}-156.47428
{txt}Iteration 2:   log likelihood = {res}-156.14965
{txt}Iteration 3:   log likelihood = {res}-156.14956
{txt}Iteration 4:   log likelihood = {res}-156.14956

{txt}Fitting full model:

Iteration 0:{col 16}log likelihood = {res}-156.14956{txt}  
Iteration 1:{col 16}log likelihood = {res}-133.16475{txt}  
Iteration 2:{col 16}log likelihood = {res}-126.51068{txt}  
Iteration 3:{col 16}log likelihood = {res}-126.06919{txt}  
Iteration 4:{col 16}log likelihood = {res}-126.06662{txt}  
Iteration 5:{col 16}log likelihood = {res}-126.06662{txt}  

Weibull regression -- accelerated failure-time form 

No. of subjects = {res}          77                     {txt}Number of obs   ={res}        77
{txt}No. of failures = {res}          77
{txt}Time at risk    = {res}    1198.476
                                                   {txt}LR chi2({res}17{txt})     ={res}     60.17
{txt}Log likelihood  =   {res}-126.06662                     {txt}Prob > chi2     ={res}    0.0000

{col 1}{text}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}          _t{col 14}{c |}      Coef.{col 26}   Std. Err.{col 37}      z{col 46}   P>|z|{col 55}    [95% Conf. Interval]
{col 1}{text}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}        oadm{col 14}{c |}{result}{space 2} 2.873855{col 26}{space 2} .7098422{col 37}{space 1}    4.05{col 46}{space 3}0.000{col 55}{space 3}  1.48259{col 67}{space 3} 4.265121
{col 1}{text}        oada{col 14}{c |}{result}{space 2} 3.330061{col 26}{space 2} .6925229{col 37}{space 1}    4.81{col 46}{space 3}0.000{col 55}{space 3} 1.972741{col 67}{space 3} 4.687381
{col 1}{text}        oadp{col 14}{c |}{result}{space 2} 6.283439{col 26}{space 2} 1.825122{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 55}{space 3} 2.706265{col 67}{space 3} 9.860613
{col 1}{text}        opda{col 14}{c |}{result}{space 2} 7.989511{col 26}{space 2}  2.80549{col 37}{space 1}    2.85{col 46}{space 3}0.004{col 55}{space 3} 2.490851{col 67}{space 3} 13.48817
{col 1}{text}    rterrain{col 14}{c |}{result}{space 2}  2.98731{col 26}{space 2} 3.412001{col 37}{space 1}    0.88{col 46}{space 3}0.381{col 55}{space 3}-3.700088{col 67}{space 3} 9.674709
{col 1}{text}    rterrstr{col 14}{c |}{result}{space 2}-1.241826{col 26}{space 2} .9156296{col 37}{space 1}   -1.36{col 46}{space 3}0.175{col 55}{space 3}-3.036427{col 67}{space 3} .5527746
{col 1}{text}    bofadjbg{col 14}{c |}{result}{space 2}-3.980549{col 26}{space 2} 1.213163{col 37}{space 1}   -3.28{col 46}{space 3}0.001{col 55}{space 3}-6.358305{col 67}{space 3}-1.602792
{col 1}{text}    summperb{col 14}{c |}{result}{space 2} .2729988{col 26}{space 2} .1011724{col 37}{space 1}    2.70{col 46}{space 3}0.007{col 55}{space 3} .0747046{col 67}{space 3}  .471293
{col 1}{text}    sumpopbg{col 14}{c |}{result}{space 2} .1624451{col 26}{space 2}  .720111{col 37}{space 1}    0.23{col 46}{space 3}0.822{col 55}{space 3}-1.248947{col 67}{space 3} 1.573837
{col 1}{text}    popratbg{col 14}{c |}{result}{space 2}  .006725{col 26}{space 2} .0175617{col 37}{space 1}    0.38{col 46}{space 3}0.702{col 55}{space 3}-.0276953{col 67}{space 3} .0411452
{col 1}{text}    qualratb{col 14}{c |}{result}{space 2} .0008077{col 26}{space 2} .0018242{col 37}{space 1}    0.44{col 46}{space 3}0.658{col 55}{space 3}-.0027677{col 67}{space 3} .0043831
{col 1}{text}    surpdiff{col 14}{c |}{result}{space 2}-.2193634{col 26}{space 2} .6282656{col 37}{space 1}   -0.35{col 46}{space 3}0.727{col 55}{space 3}-1.450741{col 67}{space 3} 1.012014
{col 1}{text}    salscale{col 14}{c |}{result}{space 2} .4270007{col 26}{space 2} .2768755{col 37}{space 1}    1.54{col 46}{space 3}0.123{col 55}{space 3}-.1156652{col 67}{space 3} .9696667
{col 1}{text}    reprsumb{col 14}{c |}{result}{space 2}-.2456715{col 26}{space 2} .1397072{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 55}{space 3}-.5194925{col 67}{space 3} .0281496
{col 1}{text}    demosumb{col 14}{c |}{result}{space 2}-.1180535{col 26}{space 2} .0595197{col 37}{space 1}   -1.98{col 46}{space 3}0.047{col 55}{space 3}  -.23471{col 67}{space 3}-.0013969
{col 1}{text}    adis3010{col 14}{c |}{result}{space 2} .0160467{col 26}{space 2} .0591555{col 37}{space 1}    0.27{col 46}{space 3}0.786{col 55}{space 3}-.0998958{col 67}{space 3} .1319893
{col 1}{text}     nactors{col 14}{c |}{result}{space 2}-.1353984{col 26}{space 2} .0954872{col 37}{space 1}   -1.42{col 46}{space 3}0.156{col 55}{space 3}-.3225497{col 67}{space 3}  .051753
{col 1}{text}       _cons{col 14}{c |}{result}{space 2} 1.263586{col 26}{space 2}  1.28543{col 37}{space 1}    0.98{col 46}{space 3}0.326{col 55}{space 3} -1.25581{col 67}{space 3} 3.782982
{col 1}{text}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}       /ln_p{col 14}{c |}{result}{space 2}   -.0597{col 27}{space 1} .0916835{col 39}  -0.65{col 47}{space 2}0.515{col 55}{space 3}-.2393963{col 67}{space 3} .1199963
{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 8}{hline 8}{hline 12}{hline 12}
{col 1}{text}           p{col 14}{c |}{result}{space 2} .9420471{col 27}{space 1} .0863701{col 55}{space 3} .7871029{col 67}{space 3} 1.127493
{col 1}{text}         1/p{col 14}{c |}{result}{space 2} 1.061518{col 27}{space 1} .0973236{col 55}{space 3} .8869238{col 67}{space 3} 1.270482
{col 1}{text}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}

{com}. 
. * note: adding the "robust" subcommand to the above will change the s.e. slightly, and in fact strengthen some results we found without robust s.e. estimates.
. 
. 
. 
. *************************************************
. ** Commands to do predicted values for Model 5 **
. *************************************************
. 
. * naive prediction.
. streg, dist(weibull) nohr time  robust

         {txt}failure _d:  {res}censor
   {txt}analysis time _t:  {res}length
                 {txt}id:  {res}warnum

{txt}Fitting constant-only model:

Iteration 0:   log pseudolikelihood = {res}-175.20796
{txt}Iteration 1:   log pseudolikelihood = {res}-156.47428
{txt}Iteration 2:   log pseudolikelihood = {res}-156.14965
{txt}Iteration 3:   log pseudolikelihood = {res}-156.14956
{txt}Iteration 4:   log pseudolikelihood = {res}-156.14956

{txt}Fitting full model:
Iteration 0:   log pseudolikelihood = {res}-156.14956

{txt}Weibull regression -- accelerated failure-time form 

No. of subjects      = {res}          77                {txt}Number of obs   ={res}        77
{txt}No. of failures      = {res}          77
{txt}Time at risk         = {res}    1198.476
{col 52}{help j_robustsingular##|_new:Wald chi2(0)}{txt}{col 68}={res}         .
{txt}Log pseudolikelihood =   {res}-156.14956                {txt}Prob > chi2     ={res}         .

{txt}{ralign 78:(Std. Err. adjusted for {res:77} clusters in warnum)}
{col 1}{text}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 14}{text}{c |}{col 26}    Robust
{col 1}{text}          _t{col 14}{c |}      Coef.{col 26}   Std. Err.{col 37}      z{col 46}   P>|z|{col 55}    [95% Conf. Interval]
{col 1}{text}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}       _cons{col 14}{c |}{result}{space 2} 2.357802{col 26}{space 2} .1966475{col 37}{space 1}   11.99{col 46}{space 3}0.000{col 55}{space 3}  1.97238{col 67}{space 3} 2.743224
{col 1}{text}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}       /ln_p{col 14}{c |}{result}{space 2}-.4762044{col 27}{space 1} .0686271{col 39}  -6.94{col 47}{space 2}0.000{col 55}{space 3} -.610711{col 67}{space 3}-.3416977
{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 8}{hline 8}{hline 12}{hline 12}
{col 1}{text}           p{col 14}{c |}{result}{space 2} .6211365{col 27}{space 1} .0426268{col 55}{space 3} .5429647{col 67}{space 3}  .710563
{col 1}{text}         1/p{col 14}{c |}{result}{space 2} 1.609952{col 27}{space 1} .1104864{col 55}{space 3} 1.407335{col 67}{space 3}  1.84174
{col 1}{text}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}

{com}. outreg using one-per-war-predictions1.doc, nolabel replace se
{txt}(note: file one-per-war-predictions1.doc not found)

{com}. predict preddurnaiive
{txt}(option median time assumed; predicted median time)

{com}. 
. 
. *  Full model.  Here, do a robust estimation for new tables.
. streg oadm oada oadp opda rterrain  rterrstr  bofadjbg summperb sumpopbg popratbg qualratb surpdiff salscale  reprsumb demosumb adis3010  nactors, dist(weibull) nohr time  robust

         {txt}failure _d:  {res}censor
   {txt}analysis time _t:  {res}length
                 {txt}id:  {res}warnum

{txt}Fitting constant-only model:

Iteration 0:   log pseudolikelihood = {res}-175.20796
{txt}Iteration 1:   log pseudolikelihood = {res}-156.47428
{txt}Iteration 2:   log pseudolikelihood = {res}-156.14965
{txt}Iteration 3:   log pseudolikelihood = {res}-156.14956
{txt}Iteration 4:   log pseudolikelihood = {res}-156.14956

{txt}Fitting full model:

Iteration 0:{col 16}log pseudolikelihood = {res}-156.14956{txt}  
Iteration 1:{col 16}log pseudolikelihood = {res}-133.16475{txt}  
Iteration 2:{col 16}log pseudolikelihood = {res}-126.51068{txt}  
Iteration 3:{col 16}log pseudolikelihood = {res}-126.06919{txt}  
Iteration 4:{col 16}log pseudolikelihood = {res}-126.06662{txt}  
Iteration 5:{col 16}log pseudolikelihood = {res}-126.06662{txt}  

Weibull regression -- accelerated failure-time form 

No. of subjects      = {res}          77                {txt}Number of obs   ={res}        77
{txt}No. of failures      = {res}          77
{txt}Time at risk         = {res}    1198.476
                                                   {txt}Wald chi2({res}16{txt})   ={res}    342.18
{txt}Log pseudolikelihood =   {res}-126.06662                {txt}Prob > chi2     ={res}    0.0000

{txt}{ralign 78:(Std. Err. adjusted for {res:77} clusters in warnum)}
{col 1}{text}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 14}{text}{c |}{col 26}    Robust
{col 1}{text}          _t{col 14}{c |}      Coef.{col 26}   Std. Err.{col 37}      z{col 46}   P>|z|{col 55}    [95% Conf. Interval]
{col 1}{text}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}        oadm{col 14}{c |}{result}{space 2} 2.873855{col 26}{space 2} .5884671{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 55}{space 3} 1.720481{col 67}{space 3}  4.02723
{col 1}{text}        oada{col 14}{c |}{result}{space 2} 3.330061{col 26}{space 2} .6382736{col 37}{space 1}    5.22{col 46}{space 3}0.000{col 55}{space 3} 2.079068{col 67}{space 3} 4.581054
{col 1}{text}        oadp{col 14}{c |}{result}{space 2} 6.283439{col 26}{space 2} 1.771235{col 37}{space 1}    3.55{col 46}{space 3}0.000{col 55}{space 3} 2.811882{col 67}{space 3} 9.754995
{col 1}{text}        opda{col 14}{c |}{result}{space 2} 7.989511{col 26}{space 2} 2.586992{col 37}{space 1}    3.09{col 46}{space 3}0.002{col 55}{space 3} 2.919099{col 67}{space 3} 13.05992
{col 1}{text}    rterrain{col 14}{c |}{result}{space 2}  2.98731{col 26}{space 2} 3.552489{col 37}{space 1}    0.84{col 46}{space 3}0.400{col 55}{space 3} -3.97544{col 67}{space 3}  9.95006
{col 1}{text}    rterrstr{col 14}{c |}{result}{space 2}-1.241826{col 26}{space 2} .9385045{col 37}{space 1}   -1.32{col 46}{space 3}0.186{col 55}{space 3}-3.081261{col 67}{space 3} .5976085
{col 1}{text}    bofadjbg{col 14}{c |}{result}{space 2}-3.980549{col 26}{space 2} 1.232754{col 37}{space 1}   -3.23{col 46}{space 3}0.001{col 55}{space 3}-6.396703{col 67}{space 3}-1.564394
{col 1}{text}    summperb{col 14}{c |}{result}{space 2} .2729988{col 26}{space 2} .1248769{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 55}{space 3} .0282445{col 67}{space 3} .5177531
{col 1}{text}    sumpopbg{col 14}{c |}{result}{space 2} .1624451{col 26}{space 2} .7914056{col 37}{space 1}    0.21{col 46}{space 3}0.837{col 55}{space 3}-1.388681{col 67}{space 3} 1.713572
{col 1}{text}    popratbg{col 14}{c |}{result}{space 2}  .006725{col 26}{space 2} .0150728{col 37}{space 1}    0.45{col 46}{space 3}0.655{col 55}{space 3}-.0228172{col 67}{space 3} .0362671
{col 1}{text}    qualratb{col 14}{c |}{result}{space 2} .0008077{col 26}{space 2} .0008295{col 37}{space 1}    0.97{col 46}{space 3}0.330{col 55}{space 3}-.0008181{col 67}{space 3} .0024335
{col 1}{text}    surpdiff{col 14}{c |}{result}{space 2}-.2193634{col 26}{space 2} .6516536{col 37}{space 1}   -0.34{col 46}{space 3}0.736{col 55}{space 3}-1.496581{col 67}{space 3} 1.057854
{col 1}{text}    salscale{col 14}{c |}{result}{space 2} .4270007{col 26}{space 2}  .212142{col 37}{space 1}    2.01{col 46}{space 3}0.044{col 55}{space 3}   .01121{col 67}{space 3} .8427915
{col 1}{text}    reprsumb{col 14}{c |}{result}{space 2}-.2456715{col 26}{space 2} .1270853{col 37}{space 1}   -1.93{col 46}{space 3}0.053{col 55}{space 3}-.4947541{col 67}{space 3} .0034112
{col 1}{text}    demosumb{col 14}{c |}{result}{space 2}-.1180535{col 26}{space 2}  .058958{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 55}{space 3} -.233609{col 67}{space 3}-.0024979
{col 1}{text}    adis3010{col 14}{c |}{result}{space 2} .0160467{col 26}{space 2} .0591995{col 37}{space 1}    0.27{col 46}{space 3}0.786{col 55}{space 3}-.0999822{col 67}{space 3} .1320756
{col 1}{text}     nactors{col 14}{c |}{result}{space 2}-.1353984{col 26}{space 2} .1003724{col 37}{space 1}   -1.35{col 46}{space 3}0.177{col 55}{space 3}-.3321247{col 67}{space 3}  .061328
{col 1}{text}       _cons{col 14}{c |}{result}{space 2} 1.263586{col 26}{space 2} 1.201878{col 37}{space 1}    1.05{col 46}{space 3}0.293{col 55}{space 3}-1.092052{col 67}{space 3} 3.619224
{col 1}{text}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}
{col 1}{text}       /ln_p{col 14}{c |}{result}{space 2}   -.0597{col 27}{space 1} .0783585{col 39}  -0.76{col 47}{space 2}0.446{col 55}{space 3}-.2132798{col 67}{space 3} .0938797
{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 8}{hline 8}{hline 12}{hline 12}
{col 1}{text}           p{col 14}{c |}{result}{space 2} .9420471{col 27}{space 1} .0738174{col 55}{space 3} .8079301{col 67}{space 3} 1.098428
{col 1}{text}         1/p{col 14}{c |}{result}{space 2} 1.061518{col 27}{space 1} .0831789{col 55}{space 3} .9103922{col 67}{space 3} 1.237731
{col 1}{text}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 9}{hline 12}{hline 12}

{com}. outreg using one-per-war-predictions2.doc, nolabel replace se
{txt}(note: file one-per-war-predictions2.doc not found)

{com}. predict preddurfull
{txt}(option median time assumed; predicted median time)

{com}. 
. egen meanlength=mean(length)
{txt}
{com}. egen medlength=median(length)
{txt}
{com}. sum length medlength

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
      length {c |}{res}        77    15.56462    24.92624       .033        121
   {txt}medlength {c |}{res}        77           5           0          5          5
{txt}
{com}. * mean length is 15.56
. * median length is 5
. * pred length from naiive (constant only) model is 5.8576
. 
. gen fullerror=preddurfull-length
{txt}
{com}. gen naierror=preddurnaiive-length
{txt}
{com}. gen absfullerr=abs(fullerror)
{txt}
{com}. gen absnaierr=abs(naierror)
{txt}
{com}. egen totabsfullerr = sum(absfullerr)
{txt}
{com}. egen totabsnaierr = sum(absnaierr)
{txt}
{com}. 
. egen meanabsfullerr = mean(absfullerr)
{txt}
{com}. egen medabsfullerr = median(absfullerr)
{txt}
{com}. egen meanabsnaierr = mean(absnaierr)
{txt}
{com}. egen medabsnaierr = median(absnaierr)
{txt}
{com}. 
. label var meanabsfullerr "Mean absolute errors, full model"
{txt}
{com}. label var medabsfullerr "Median absolute errors, full model"
{txt}
{com}. label var meanabsnaierr "Mean of absolute errors, naiive model"
{txt}
{com}. label var medabsnaierr "Median of absolute errors, naiive model"
{txt}
{com}. 
. * summarize errors to get mean of errors, absolute errors, and sd.
. sum fullerror naierror absfullerr absnaierr

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
   fullerror {c |}{res}        77   -4.224045    18.72265  -73.65292   40.99869
    {txt}naierror {c |}{res}        77   -9.707057    24.92624  -115.1424   5.824566
  {txt}absfullerr {c |}{res}        77    11.10321    15.61126   .0006437   73.65292
   {txt}absnaierr {c |}{res}        77    13.79905     22.8881   .1424341   115.1424
{txt}
{com}. sum meanabsfullerr medabsfullerr meanabsnaierr medabsnaierr

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
meanabsful~r {c |}{res}        77    11.10321           0   11.10321   11.10321
{txt}medabsfull~r {c |}{res}        77    4.396049           0   4.396049   4.396049
{txt}meanabsnai~r {c |}{res}        77    13.79905           0   13.79905   13.79905
{txt}medabsnaierr {c |}{res}        77    4.857566           0   4.857566   4.857566
{txt}
{com}. 
. 
. 
. * Now compute error as % of length.  It turns out this is not a great measure, because 
. * error can be greater than length.  Then, 2.5 (e.g.) means the error is 2.5x the length.
. * This may not be a good measure then, because you are automatically very wrong for the shortest wars.
. * e.g. in a 1 month war, a 6 month error leads to a 600% (bad) error, while in a 12 month war, that 
. * same error is a 50% error.
. * BUT, our model still does much better than the naiive model here.
. gen pctactabsfullerr = absfullerr/length
{txt}
{com}. gen pctactabsnaierr = absnaierr/length
{txt}
{com}. egen meanpctactabsfullerr = mean(pctactabsfullerr )
{txt}
{com}. egen meanpctactabsnaierr = mean(pctactabsnaierr )
{txt}
{com}. label var meanpctactabsfullerr "Mean of absolute errors, full model, as pct of length"
{txt}
{com}. label var meanpctactabsnaierr "Mean absolute errors, naiive model, as pct of length"
{txt}
{com}. 
. * Look at error as pct of length.
. sum pctactabsfullerr pctactabsnaierr meanpctactabsfullerr meanpctactabsnaierr 

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
pctactabsf~r {c |}{res}        77     2.85852    6.905149   .0003219   49.96193
{txt}pctactabsn~r {c |}{res}        77    9.293806    29.98519    .023739    176.502
{txt}meanpct~lerr {c |}{res}        77     2.85852           0    2.85852    2.85852
{txt}meanpct~ierr {c |}{res}        77    9.293806           0   9.293806   9.293806
{txt}
{com}. 
. 
. 
. * Now generate total errors from naiive model, total errors from our model, and can do PRE.
. * PRE:  (error1 - error2) / error1
. egen totalnaiiveerrors=sum(absnaierr)
{txt}
{com}. egen totalfullerrors=sum(absfullerr)
{txt}
{com}. gen PRE=(totalnaiiveerrors - totalfullerrors)/totalnaiiveerrors
{txt}
{com}. label var totalnaiiveerrors "Total of absolute errors, naiive model"
{txt}
{com}. label var totalfullerrors "Total of absolute errors, full model"
{txt}
{com}. label var PRE "Prop. reduction in total errors"
{txt}
{com}. 
. sum totalnaiiveerrors totalfullerrors PRE

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
totalnaiiv~s {c |}{res}        77    1062.527           0   1062.527   1062.527
{txt}totalfulle~s {c |}{res}        77    854.9474           0   854.9474   854.9474
         {txt}PRE {c |}{res}        77     .195364           0    .195364    .195364
{txt}
{com}. 
. 
. * To see what cases are right/wrong, can list cases and errors
. * sort fullerror
. * list warnum frstyear  lastyear ccode1 ccode2 length preddurfull fullerror naierror
. 
{txt}end of do-file

{com}. exit, clear
